name: Tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
    - name: Install dependencies
      run: |
        pipenv install --dev --python `which python`
    - name: Linting and formatting
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # check formatting
        pipenv run black --check us
    - name: Test with pytest
      run: |
        pipenv run pytest
        
        
  test-aarch64:
    name: build_arm64
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false 
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build and Test for arm64
      run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
           arm64v8/ubuntu:latest \
           bash -exc 'apt-get update && apt-get -y install git && \
           ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
           apt install -y software-properties-common && \
           add-apt-repository ppa:deadsnakes/ppa && \
           apt install -y python3.8 && \
           apt install -y python3.8-venv && \
           python3.8 -m venv venv38 && \
           source venv38/bin/activate && \
           python -m pip install --upgrade pip && \
           pipenv install --dev --python `which python` && \
           apt-get install -y python3-dev build-essential && \
           pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics && \
           pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics && \
           pipenv run black --check us && \
           pipenv run pytest'           
